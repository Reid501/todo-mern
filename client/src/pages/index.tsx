import Todo from "@/components/Todo";
import Head from "next/head";
import { useEffect, useState } from "react";

const API_BASE = "http://localhost:3002";

interface TodoType {
  _id: string;
  text: string;
  complete: boolean;
  timestamp: string;
}

export default function Home() {
  const [todos, setTodos] = useState<TodoType[] | []>([]);
  const [popupActive, setPopupActive] = useState(false);
  const [newTodo, setNewTodo] = useState("");

  const GetTodos = () => {
    fetch(API_BASE + "/todos")
      .then((res) => res.json())
      .then((data) => setTodos(data))
      .catch((error) => console.error("Error: ", error));
  };

  useEffect(() => {
    GetTodos();
  }, []);

  const completeToDo = async (id: string) => {
    const data: TodoType = await fetch(API_BASE + "/todo/complete/" + id, {
      method: "PUT",
    }).then((res) => res.json());

    setTodos((todos) =>
      todos.map((todo) => {
        if (todo._id === data._id) {
          todo.complete = data.complete;
        }
        return todo;
      })
    );
  };

  const deleteTodo = async (id: string) => {
    const data: TodoType = await fetch(API_BASE + "/todo/delete/" + id, {
      method: "DELETE",
    }).then((res) => res.json());

    setTodos((todos) => todos.filter((todo) => todo._id !== data._id));
  };

  const addToDo = async () => {
    const data = await fetch(API_BASE + "/todo/new", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        text: newTodo,
      }),
    }).then((res) => res.json());

    setTodos([...todos, data]);
    setPopupActive(false);
    setNewTodo("");
  };

  return (
    <div className="bg-darkAlt text-light min-h-screen p-16">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1 className="text-4xl font-bold mb-5">Welcome, Alex</h1>
      <h4 className="text-2xl text-lightAlt mb-5">Your tasks</h4>
      {/* Todos */}
      <div className="">
        {todos.map((todo) => (
          <Todo
            key={todo._id}
            text={todo.text}
            complete={todo.complete}
            onClick={() => completeToDo(todo._id)}
            deleteTodo={() => deleteTodo(todo._id)}
          />
        ))}
      </div>
      <div
        className="fixed bottom-32 right-16 flex items-center justify-center h-20 w-20 rounded-3xl text-4xl bg-gradient-to-b from-primary to-secondary cursor-pointer hover:opacity-80"
        onClick={() => setPopupActive(true)}
      >
        +
      </div>

      {popupActive ? (
        <div className="fixed top-[50%] left-[50%] translate-y-[-50%] translate-x-[-50%] w-full max-w-[400px] bg-light p-8 rounded-md  shadow-lg shadow-dark">
          <div
            className="cursor-pointer absolute top-[16px] right-[16px] text-sm text-light bg-red-700 rounded-xl h-[20px] w-[20px] flex items-center justify-center"
            onClick={() => setPopupActive(false)}
          >
            x
          </div>
          <div className="">
            <h3 className="text-dark font-bold">ADD TASK</h3>
            <input
              className="border-none outline-none bg-white p-2 rounded-md w-full my-4 text-dark font-bold"
              type="text"
              onChange={(e) => setNewTodo(e.target.value)}
              value={newTodo}
            />
            <button
              className="bg-gradient-to-b from-primary to-secondary cursor-pointer hover:opacity-80 py-2 px-4 rounded-3xl font-bold text-lg"
              onClick={addToDo}
            >
              Create Task
            </button>
          </div>
        </div>
      ) : (
        ""
      )}
    </div>
  );
}
